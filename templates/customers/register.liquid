{{ 'customer.css' | asset_url | stylesheet_tag }}
{{ 'register-customer.css' | asset_url | stylesheet_tag }}

<div class="customer register register-app" id="RegisterApp">
  {% section 'register-step-one' %}
  {% section 'register-step-two' %}
  {% section 'register-step-three' %}
  {% section 'register-step-four' %}
  {% section 'register-step-five' %}
</div>

<script>
  if (document.querySelector("#RegisterApp")) {
    const RegisterApp = Vue.createApp({
      delimiters: [
        "${", "}"
      ],
      data() {
        return {
          URL: "https://api.mretail.pintap.id",

          customerData: {
            fullname: null,
            phone: null,
            email: null,
            password: null,
            birthdate: null,
            gender: null
          },

          storeData: {
            shopName: null,
            province: null,
            city: null,
            district: null,
            subdistrict: null,
            zipcode: null,
            address: null,
            addressDetail: null,
            shopImg: null
          },

          pictURL: null,

          numOne: null,
          numTwo: null,
          numThree: null,
          numFour: null,
          numFive: null,
          numSix: null,

          loading: false,

          provinceApi: null,
          cityApi: null,
          districtApi: null,
          subdistrictApi: null,

          hideGenderLabel: true,
          hideProvinceLabel: true,
          hideCityLabel: true,
          hideDistrictLabel: true,
          hideSubdistrictLabel: true,

          typeOTP: "",
          successOTP: false,
          failOTP: false,

          checkCustomer: false
        };
      },

      created() {
        axios
          .get(`${
            this.URL
          }/api/v1/region/province`)
          .then((res) => {
            this.provinceApi = res
              .data
              .data
              .sort((a, b) => a.name_id.localeCompare(b.name_id));
          })
          .catch((err) => {
            console.log(err);
          });
      },

      methods: {
        handleProvince() {
          axios
            .get(`${
              this.URL
            }/api/v1/region/city/${
              this.storeData.province
            }`)
            .then((res) => {
              this.cityApi = res
                .data
                .data
                .sort((a, b) => a.name.localeCompare(b.name));

              this.storeData.city = null;
              this.storeData.district = null;
              this.storeData.subdistrict = null;
              this.storeData.zipcode = null;
              this.hideProvinceLabel = false;
              this.hideCityLabel = true;
            })
            .catch((err) => {
              console.log(err);
            });
        },

        handleCity() {
          axios
            .get(`${
              this.URL
            }/api/v1/region/district/${
              this.storeData.city
            }`)
            .then((res) => {
              this.districtApi = res
                .data
                .data
                .sort((a, b) => a.name.localeCompare(b.name));

              this.storeData.district = null;
              this.storeData.subdistrict = null;
              this.storeData.zipcode = null;
              this.hideCityLabel = false;
              this.hideDistrictLabel = true;
            })
            .catch((err) => {
              console.log(err);
            });
        },

        handleDistrict() {
          axios
            .get(`${
              this.URL
            }/api/v1/region/subdistrict/${
              this.storeData.district
            }`)
            .then((res) => {
              this.subdistrictApi = res
                .data
                .data
                .sort((a, b) => a.name.localeCompare(b.name));

              this.storeData.subdistrict = null;
              this.storeData.zipcode = null;
              this.hideDistrictLabel = false;
              this.hideSubdistrictLabel = true;
            })
            .catch((err) => {
              console.log(err);
            });
        },

        handleZipcode() {
          axios
            .get(`${
              this.URL
            }/api/v1/region/zip/${
              this.storeData.subdistrict
            }`)
            .then((res) => {
              this.storeData.zipcode = res
                .data
                .data
                .zip_code;

              this.hideSubdistrictLabel = false;
            })
            .catch((err) => {
              console.log(err);
            });
        },

        handleTempDataCustomer() {
          if (this
              .customerData
              .phone
              .startsWith("0")) {
            this.customerData.phone = this
              .customerData
              .phone
              .replace("0", "+62");
          }

          axios
            .get(`${
              this.URL
            }/api/v1/profile/email?phone=${
              this.customerData.phone
            }`)
            .then((res) => {
              if (res.data.code === 404) {
                this.goToStepTwoFromOne();
              }

              if (res.data.code === 0) {
                window.scrollTo(0, 0);
                this.checkCustomer = true;
              }
            })
            .catch((err) => {
              console.log(err);
            });
        },

        handleReqOtp(type) {
          console.log("Function request " + type + " OTP");
          this.typeOTP = type;
          let phone = this.customerData.phone;

          if (phone.startsWith("0")) {
            phone = phone.replace("0", "+62");
          }

          axios
            .post(`${
              this.URL
            }/api/v1/auth/register`, {
              name: this.customerData.fullname,
              phone: this.customerData.phone,
              password: this.customerData.password,
              email: this.customerData.email,
              birthdate: this.customerData.birthdate,
              gender: this.customerData.gender
            })
            .then((res) => {
              if (res.data.code === 400) {
                alert(res.data.message);
              }

              if (res.data.code === 0) {
                axios
                  .post(`${
                    this.URL
                  }/api/v1/auth/otp/send`, {
                    phone: phone,
                    channel: type
                  })
                  .then((res) => {
                    if (res.data.code === 0) {
                      this.goToStepThreeFromTwo();
                    }
                  })
                  .catch((err) => {
                    console.log(err);
                  });
              }
            })
            .catch((err) => {
              alert("Pendaftaran gagal.");
              console.log(err);
            });
        },

        handleRegisterConfirmOtp() {
          const joinNum = [
            this.numOne,
            this.numTwo,
            this.numThree,
            this.numFour,
            this.numFive,
            this.numSix
          ].join("");

          axios
            .post(`${
              this.URL
            }/api/v1/auth/otp/confirm`, {
              phone: this.customerData.phone,
              otp: joinNum
            })
            .then((res) => {
              if (res.data.code === 401) {
                this.failOTP = true;
              }

              if (res.data.code === 0) {
                localStorage.setItem("token", res
                  .data
                  .data
                  .token);

                this.failOTP = false;
                this.successOTP = true;

                this.goToStepFourFromThree();
              }
            })
            .catch((err) => {
              console.log(err);
            });
        },

        handleRegisterStore(e) {
          let formData = new FormData();
          formData.append("shop_name", this.storeData.shopName);
          formData.append("province", this.storeData.province);
          formData.append("city", this.storeData.city);
          formData.append("district", this.storeData.district);
          formData.append("subdistrict", this.storeData.subdistrict);
          formData.append("zipcode", this.storeData.zipcode);
          formData.append("address", this.storeData.address);
          formData.append("address_detail", this.storeData.addressDetail);
          formData.append("file", this.storeData.shopImg);

          for (const pair of formData.entries()) {
            console.log(pair[0] + ": " + pair[1]);
          }

          axios
            .post(`${
              this.URL
            }/api/v1/profile/address`, formData, {
              headers: {
                Authorization: "Bearer " + localStorage.getItem("token"),
                "Content-Type": "multipart/form-data"
              }
            })
            .then((res) => {
              if (res.data.code === 400) {
                alert(res.data.message);
              }

              if (res.data.code === 0) {
                this.goToStepFiveFromFour();
              }
            })
            .catch((err) => {
              console.log(err);
            });
        },

        setPicture(e) {
          this.storeData.shopImg = e.target.files[0];
          this.pictURL = URL.createObjectURL(this.storeData.shopImg);
        },
        /* END OF HANDLE REGION */

        goToStepTwoFromOne() {
          window.scrollTo(0, 0);
          const eStepOne = document.querySelector("#RegisterStepOne");
          const eStepTwo = document.querySelector("#RegisterStepTwo");
          if (eStepTwo.classList.contains("hidden")) {
            eStepOne.classList.add("hidden");
            eStepTwo.classList.remove("hidden");
            eStepTwo.classList.add("block");
          }
        },

        goToStepThreeFromTwo() {
          window.scrollTo(0, 0);
          const eStepTwo = document.querySelector("#RegisterStepTwo");
          const eStepThree = document.querySelector("#RegisterStepThree");
          if (eStepThree.classList.contains("hidden")) {
            eStepTwo.classList.add("hidden");
            eStepThree.classList.remove("hidden");
            eStepThree.classList.add("block");
          }
        },

        goToStepFourFromThree() {
          window.scrollTo(0, 0);
          const eStepThree = document.querySelector("#RegisterStepThree");
          const eStepFour = document.querySelector("#RegisterStepFour");
          if (eStepFour.classList.contains("hidden")) {
            eStepThree.classList.add("hidden");
            eStepFour.classList.remove("hidden");
            eStepFour.classList.add("block");
          }
        },

        goToStepFiveFromFour() {
          window.scrollTo(0, 0);
          const eStepFour = document.querySelector("#RegisterStepFour");
          const eStepFive = document.querySelector("#RegisterStepFive");
          if (eStepFive.classList.contains("hidden")) {
            eStepFour.classList.add("hidden");
            eStepFive.classList.remove("hidden");
            eStepFive.classList.add("block");
          }
        },

        backToStepOneFromTwo() {
          window.scrollTo(0, 0);
          const eStepOne = document.querySelector("#RegisterStepOne");
          const eStepTwo = document.querySelector("#RegisterStepTwo");
          if (eStepOne.classList.contains("hidden")) {
            eStepTwo.classList.add("hidden");
            eStepOne.classList.remove("hidden");
            eStepOne.classList.add("block");
          }
        },

        backToStepTwoFromThree() {
          window.scrollTo(0, 0);
          const eStepTwo = document.querySelector("#RegisterStepTwo");
          const eStepThree = document.querySelector("#RegisterStepThree");
          if (eStepTwo.classList.contains("hidden")) {
            eStepThree.classList.add("hidden");
            eStepTwo.classList.remove("hidden");
            eStepTwo.classList.add("block");
          }
        },

        backToStepThreeFromFour() {
          window.scrollTo(0, 0);
          const eStepThree = document.querySelector("#RegisterStepThree");
          const eStepFour = document.querySelector("#RegisterStepFour");
          if (eStepThree.classList.contains("hidden")) {
            eStepFour.classList.add("hidden");
            eStepThree.classList.remove("hidden");
            eStepThree.classList.add("block");
          }
        }
        /* END OF MOVE STEP REGION */
      }
    });

    RegisterApp.mount("#RegisterApp");

  }

  flatpickr(".flatdate-birth", {
    allowInput: true,
    nextArrow: null,
    prevArrow: null,
    disableMobile: true,
    maxDate: "today"
  });

  const clickEvent = (first, last) => {
    if (first.value.length) {
      document.getElementById(last).focus();
    }
  }

  function restrictKey(evt) {
    var theEvent = evt || window.event;

    if (theEvent.type === "paste") {
      key = event.clipboardData.getData("text/plain");
    } else {
      var key = theEvent.keyCode || theEvent.which;
      key = String.fromCharCode(key);
    }

    var regex = /^[\d ()+-]+$/;

    if (! regex.test(key)) {
      theEvent.returnValue = false;
      if (theEvent.preventDefault) {
        theEvent.preventDefault();
      }
    }
  }
</script>